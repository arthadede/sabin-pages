{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Form, Input, Button, Icon, message } from \"antd\";\nimport { Router } from '../routes';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport ConfirmEmail from '../components/ConfirmEmail';\n\nfunction RegisterForm(props) {\n  var _props$form = props.form,\n      getFieldDecorator = _props$form.getFieldDecorator,\n      getFieldValue = _props$form.getFieldValue;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sended = _useState4[0],\n      setSended = _useState4[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(err, values) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (err) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.prev = 1;\n                setLoading(true);\n                _context.next = 5;\n                return axios({\n                  method: \"POST\",\n                  url: \"\".concat(props.apiUrl, \"/register\"),\n                  data: values\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  setSended(true);\n                }\n\n                _context.next = 16;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                _context.t1 = _context.t0.response.status;\n                _context.next = _context.t1 === 400 ? 14 : 16;\n                break;\n\n              case 14:\n                message.error(_context.t0.response.data.message);\n                return _context.abrupt(\"break\", 16);\n\n              case 16:\n                _context.prev = 16;\n                setLoading(false);\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9, 16, 19]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  if (sended) {\n    return React.createElement(ConfirmEmail, {\n      email: getFieldValue('email')\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      height: \"inherit\",\n      display: 'flex',\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"Register - Sistem Anotasi Named Entity\")), React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"center\"\n  }, React.createElement(Card, {\n    title: \"Register\",\n    extra: React.createElement(\"a\", {\n      onClick: function onClick() {\n        return Router.pushRoute(\"/\");\n      }\n    }, \"Back \", React.createElement(Icon, {\n      type: \"right\"\n    })),\n    style: {\n      minWidth: 400\n    }\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit\n  }, React.createElement(Form.Item, null, getFieldDecorator('firstname', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      min: 4,\n      message: \"Minimum length is 4 characters.\"\n    }, {\n      max: 20,\n      message: \"Minimum length is 20 characters.\"\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"First name\"\n  }))), React.createElement(Form.Item, null, getFieldDecorator('lastname', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      min: 4,\n      message: \"Minimum length is 4 characters.\"\n    }, {\n      max: 20,\n      message: \"Minimum length is 20 characters.\"\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Last name\"\n  }))), React.createElement(Form.Item, null, getFieldDecorator('email', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      type: 'email',\n      message: \"Please provide a valid email address.\"\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Email\"\n  }))), React.createElement(Form.Item, null, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      min: 6,\n      message: \"Minimum length is 6 characters.\"\n    }, {\n      max: 20,\n      message: \"Minimum length is 20 characters.\"\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\"\n  }))), React.createElement(Form.Item, {\n    style: {\n      margin: 0,\n      textAlign: \"center\"\n    }\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    block: true\n  }, \"Register\"), \"Already have an account? \", React.createElement(\"a\", {\n    onClick: function onClick() {\n      return Router.pushRoute(\"/login\");\n    }\n  }, \"Sign in\"))))));\n}\n\nvar WrappedRegisterForm = Form.create({\n  name: \"register-form\"\n})(RegisterForm);\nexport default WrappedRegisterForm;","map":null,"metadata":{},"sourceType":"module"}