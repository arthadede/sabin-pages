{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Row, Col, Avatar, Card, Form, Input, Upload, Button, Radio, Tag, Icon, message, Popover } from \"antd\";\nimport Head from 'next/head';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { CirclePicker } from 'react-color';\nimport { Router } from '../routes';\nimport UserLayout from \"../components/UserLayout\";\nimport { withAuthSync } from '../utils/auth';\nvar RadioButton = Radio.Button;\n\nfunction handleInputLabelRef(ref, cb) {\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target) && !event.target.title) {\n      cb({\n        status: false\n      });\n    }\n  }\n\n  useEffect(function () {\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n}\n\nfunction ModelCreate(props) {\n  var _props$form = props.form,\n      getFieldDecorator = _props$form.getFieldDecorator,\n      getFieldValue = _props$form.getFieldValue,\n      setFieldsValue = _props$form.setFieldsValue;\n  var inputRef = useRef(null);\n  var labelWrapper = useRef(null);\n  var labelRef = useRef(null);\n\n  var _useState = useState(\"#0088ff\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorPicker = _useState2[0],\n      setColorPicker = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageUrl = _useState6[0],\n      setImageUrl = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageLoading = _useState8[0],\n      setImageLoading = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputVisible = _useState12[0],\n      setInputVisible = _useState12[1];\n\n  handleInputLabelRef(labelWrapper, function (_ref) {\n    var status = _ref.status;\n\n    if (status === false && inputValue !== null) {\n      handleAddLabel();\n      setInputVisible(false);\n    } else {\n      setInputVisible(false);\n    }\n  });\n\n  var handleInputVisible =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setInputVisible(true);\n\n            case 2:\n              _context.next = 4;\n              return inputRef.current.focus();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleInputVisible() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleAddLabel =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var label;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              label = getFieldValue('label');\n              setFieldsValue({\n                label: [].concat(_toConsumableArray(label), [{\n                  name: inputValue,\n                  color: colorPicker\n                }])\n              });\n              _context2.next = 4;\n              return setInputValue(null);\n\n            case 4:\n              _context2.next = 6;\n              return labelRef.current;\n\n            case 6:\n              _context2.t0 = _context2.sent;\n\n              if (!_context2.t0) {\n                _context2.next = 9;\n                break;\n              }\n\n              labelRef.current.focus();\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleAddLabel() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleTabLabel = function handleTabLabel(e) {\n    var keyCode = e.which || e.keyCode;\n\n    if (keyCode === 9) {\n      e.preventDefault();\n\n      if (!inputValue) {\n        setInputVisible(false);\n        return;\n      }\n\n      handleAddLabel();\n    }\n\n    if (keyCode === 27) {\n      setInputValue(null);\n      setInputVisible(false);\n    }\n  };\n\n  var handleOnCloseLabel = function handleOnCloseLabel(key) {\n    var label = getFieldValue('label');\n    setFieldsValue({\n      label: label.filter(function (text, i) {\n        return i !== key;\n      })\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(err, values) {\n        var avatar, model, resModel, formData, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (err) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                avatar = values.avatar, model = _objectWithoutProperties(values, [\"avatar\"]);\n                _context3.prev = 2;\n                setLoading(true);\n                _context3.next = 6;\n                return axios({\n                  method: \"POST\",\n                  url: \"\".concat(props.apiUrl, \"/model\"),\n                  data: model,\n                  headers: {\n                    authorization: props.token\n                  }\n                });\n\n              case 6:\n                resModel = _context3.sent;\n                formData = new FormData();\n                formData.append('avatar', avatar.originFileObj);\n                formData.append('model', resModel.data.id);\n                _context3.next = 12;\n                return axios({\n                  method: 'POST',\n                  url: \"\".concat(props.apiUrl, \"/avatar\"),\n                  data: formData,\n                  headers: {\n                    authorization: props.token\n                  }\n                });\n\n              case 12:\n                response = _context3.sent;\n\n                if (response.status === 200) {\n                  message.success(\"Model created successfully.\");\n                  Router.pushRoute(\"/dashboard\");\n                }\n\n                _context3.next = 23;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](2);\n                _context3.t1 = _context3.t0.response.status;\n                _context3.next = _context3.t1 === 400 ? 21 : 23;\n                break;\n\n              case 21:\n                message.error(_context3.t0.response.data.message && _context3.t0.response.statusText);\n                return _context3.abrupt(\"break\", 23);\n\n              case 23:\n                _context3.prev = 23;\n                setLoading(false);\n                return _context3.finish(23);\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 16, 23, 26]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  var getBase64 = function getBase64(img, callback) {\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      return callback(reader.result);\n    });\n    reader.readAsDataURL(img);\n  };\n\n  var beforeUpload = function beforeUpload(file) {\n    if (file.type !== 'image/png') {\n      message.error('We only support PNG thumbnail.');\n      return false;\n    }\n\n    if (file.size / 1024 / 1024 > 5) {\n      message.error('Please upload a picture smaller than 1 MB.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleChange = function handleChange(info) {\n    if (info.file.status === 'uploading') {\n      setImageLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, function (imageUrl) {\n        setImageUrl(imageUrl);\n        setImageLoading(false);\n      });\n      return info && info.file;\n    }\n  };\n\n  var uploadButton = React.createElement(\"div\", null, React.createElement(Icon, {\n    type: imageLoading ? 'loading' : 'plus'\n  }), React.createElement(\"div\", {\n    className: \"ant-upload-text\"\n  }, \"Upload\"));\n  return React.createElement(UserLayout, props, React.createElement(Head, null, React.createElement(\"title\", null, \"Create Model - Sistem Anotasi Named Entity\")), React.createElement(Form, null, React.createElement(Card, {\n    title: \"Create Model\"\n  }, React.createElement(Row, {\n    gutter: 16\n  }, React.createElement(Col, {\n    md: 4\n  }, React.createElement(Form.Item, {\n    label: \"Avatar\"\n  }, getFieldDecorator('avatar', {\n    valuePropName: 'file',\n    getValueFromEvent: handleChange,\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }]\n  })(React.createElement(Upload, {\n    accept: \".png,image/png\",\n    name: \"avatar\",\n    action: \"/source\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    beforeUpload: beforeUpload\n  }, imageUrl ? React.createElement(Avatar, {\n    src: imageUrl,\n    size: 90\n  }) : uploadButton)))), React.createElement(Col, {\n    md: 20\n  }, React.createElement(Form.Item, {\n    label: \"Name\"\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      min: 4,\n      message: \"Minimum length is 6 characters.\"\n    }, {\n      max: 20,\n      message: \"Minimum length is 20 characters.\"\n    }]\n  })(React.createElement(Input, null))), React.createElement(Form.Item, {\n    label: \"Description\"\n  }, getFieldDecorator('desc', {\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }]\n  })(React.createElement(Input.TextArea, {\n    rows: 4\n  }))), React.createElement(Form.Item, {\n    label: \"Annotator\"\n  }, getFieldDecorator('annotator', {\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }]\n  })(React.createElement(Radio.Group, {\n    buttonStyle: \"solid\"\n  }, React.createElement(RadioButton, {\n    value: \"classifier\"\n  }, \"Classifier\"), React.createElement(RadioButton, {\n    value: \"extractor\"\n  }, \"Extractor\"), React.createElement(RadioButton, {\n    value: \"pattern-extractor\"\n  }, \"Pattern Extractor\")))), React.createElement(Form.Item, {\n    label: \"Labels\",\n    extra: \"Press tab or enter for new input label.\"\n  }, getFieldDecorator('label', {\n    initialValue: [],\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }]\n  })(React.createElement(React.Fragment, null, getFieldValue('label').map(function (item, key) {\n    return React.createElement(Tag, {\n      key: key,\n      className: \"ant-custom\",\n      color: item.color,\n      onClose: function onClose() {\n        return handleOnCloseLabel(key);\n      },\n      closable: true\n    }, item.name);\n  }))), inputVisible && React.createElement(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    ref: labelWrapper\n  }, React.createElement(Input, {\n    ref: inputRef,\n    style: {\n      width: 120,\n      outlineColor: colorPicker\n    },\n    value: inputValue,\n    onChange: function onChange(e) {\n      return setInputValue(e.target.value);\n    },\n    onPressEnter: handleAddLabel,\n    onKeyDown: handleTabLabel,\n    suffix: React.createElement(Popover, {\n      placement: \"bottomRight\",\n      content: React.createElement(CirclePicker, {\n        color: colorPicker,\n        onChange: function onChange(color) {\n          setColorPicker(color.hex);\n          inputRef.current.focus();\n        }\n      }),\n      trigger: \"click\"\n    }, React.createElement(\"div\", {\n      style: {\n        width: 15,\n        height: 15,\n        background: colorPicker\n      }\n    }))\n  })), !inputVisible && React.createElement(\"button\", {\n    ref: labelRef,\n    className: \"ant-tag ant-custom\",\n    style: {\n      background: '#fff',\n      borderStyle: 'dashed',\n      cursor: 'pointer'\n    },\n    onClick: handleInputVisible,\n    onKeyPress: handleInputVisible\n  }, \"New Label\")), React.createElement(Form.Item, {\n    label: \"Type\"\n  }, getFieldDecorator('isPrivate', {\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }]\n  })(React.createElement(Radio.Group, {\n    buttonStyle: \"solid\"\n  }, React.createElement(RadioButton, {\n    value: false\n  }, \"Public\"), React.createElement(RadioButton, {\n    value: true\n  }, \"Private\")))), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    }\n  }, React.createElement(Button, {\n    style: {\n      marginLeft: 16\n    },\n    type: \"primary\",\n    onClick: handleSubmit,\n    loading: loading\n  }, \"Create Model\"), React.createElement(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: function onClick() {\n      return Router.pushRoute('/dashboard');\n    },\n    className: \"btn-danger\"\n  }, \"Cancel\")))))));\n}\n\nModelCreate.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4() {\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));\nvar WrappedModelCreateForm = Form.create({\n  name: \"model-create-form\"\n})(ModelCreate);\nexport default withAuthSync(WrappedModelCreateForm);","map":null,"metadata":{},"sourceType":"module"}