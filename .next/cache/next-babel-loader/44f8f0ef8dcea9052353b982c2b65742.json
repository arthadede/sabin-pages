{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Typography, Popover, Row, Col, Avatar, Tag, Input, Card, Radio, Button, Modal, Icon, Upload, message, Spin } from \"antd\";\nimport Head from 'next/head';\nimport Error from 'next/error';\nimport axios from \"axios\";\nimport XLSX from 'xlsx';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Router } from '../routes';\nimport UserLayout from \"../components/UserLayout\";\nimport ModelSider from \"../components/MeModelSider\";\nimport { withAuthSync } from '../utils/auth';\nimport { CirclePicker } from 'react-color';\nimport { saveAs } from 'file-saver';\nimport _ from 'lodash';\n\nfunction handleInputLabelRef(ref, cb) {\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target) && !event.target.title) {\n      cb({\n        status: false\n      });\n    }\n  }\n\n  useEffect(function () {\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n}\n\nfunction ModelView(props) {\n  var selectedKeys = props.route.parsedUrl.pathname;\n\n  if (props.errorCode > 200) {\n    return React.createElement(Error, {\n      statusCode: props.errorCode\n    });\n  }\n\n  var inputRef = useRef(null);\n  var labelWrapper = useRef(null);\n\n  var _useState = useState(\"#0088ff\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorPicker = _useState2[0],\n      setColorPicker = _useState2[1];\n\n  var _useState3 = useState(props.model),\n      _useState4 = _slicedToArray(_useState3, 2),\n      model = _useState4[0],\n      setModel = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      spinning = _useState6[0],\n      setSpinning = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputValue = _useState8[0],\n      setInputValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputVisible = _useState10[0],\n      setInputVisible = _useState10[1];\n\n  handleInputLabelRef(labelWrapper, function (_ref) {\n    var status = _ref.status;\n\n    if (status === false && inputValue !== null) {\n      handleAddLabel();\n      setInputVisible(false);\n    } else {\n      setInputVisible(false);\n    }\n  });\n\n  var handleTabLabel = function handleTabLabel(e) {\n    var keyCode = e.which || e.keyCode;\n\n    if (keyCode === 9) {\n      e.preventDefault();\n\n      if (!inputValue) {\n        setInputVisible(false);\n        return;\n      }\n\n      handleAddLabel();\n    }\n\n    if (keyCode === 27) {\n      setInputValue(null);\n      setInputVisible(false);\n    }\n  };\n\n  var handleInputVisible =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setInputVisible(true);\n\n            case 2:\n              _context.next = 4;\n              return inputRef.current.focus();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleInputVisible() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleModelRemove = function handleModelRemove() {\n    var handleOk =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios({\n                  method: 'DELETE',\n                  url: props.modelApi,\n                  headers: {\n                    authorization: props.token\n                  }\n                });\n\n              case 2:\n                response = _context2.sent;\n\n                if (response.status === 200) {\n                  Router.pushRoute('/dashboard');\n                  message.success(\"Modal deleted successfully.\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function handleOk() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: \"You will not be able to recover this model.\",\n      okText: 'Yes',\n      onOk: handleOk,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleModelUpdate =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(data) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new _Promise(function (resolve, reject) {\n                setSpinning(true);\n                axios({\n                  method: 'PATCH',\n                  url: props.modelApi,\n                  headers: {\n                    authorization: props.token\n                  },\n                  data: data\n                }).then(function (res) {\n                  return res.status === 200 && resolve(res.data);\n                })[\"catch\"](function (err) {\n                  return console.log(err);\n                })[\"finally\"](function () {\n                  setSpinning(false);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleModelUpdate(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleEditName = function handleEditName(text) {\n    handleModelUpdate({\n      name: text\n    }).then(function (data) {\n      return setModel(function (state) {\n        return _objectSpread({}, state, data[0], {\n          config: _objectSpread({}, state.config, data[1])\n        });\n      });\n    });\n  };\n\n  var handleEditDescription = function handleEditDescription(text) {\n    handleModelUpdate({\n      desc: text\n    }).then(function (data) {\n      return setModel(function (state) {\n        return _objectSpread({}, state, data[0], {\n          config: _objectSpread({}, state.config, data[1])\n        });\n      });\n    });\n  };\n\n  var handleAddLabel = function handleAddLabel() {\n    handleModelUpdate({\n      label: [].concat(_toConsumableArray(model.label), [{\n        name: inputValue,\n        color: colorPicker\n      }])\n    }).then(function (data) {\n      setModel(function (state) {\n        return _objectSpread({}, state, data[0], {\n          config: _objectSpread({}, state.config, data[1])\n        });\n      });\n      setInputValue(null);\n      setInputVisible(false);\n    });\n  };\n\n  var handleRadioPrivate = function handleRadioPrivate(e) {\n    var handle = function handle() {\n      return handleModelUpdate({\n        isPrivate: e.target.value\n      }).then(function (data) {\n        return setModel(function (state) {\n          return _objectSpread({}, state, data[0], {\n            config: _objectSpread({}, state.config, data[1])\n          });\n        });\n      });\n    };\n\n    if (e.target.value === true) handle();else Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will share your model to public.',\n      okText: 'Yes',\n      onOk: handle,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleRadioMenuStats = function handleRadioMenuStats(e) {\n    var handle = function handle() {\n      return handleModelUpdate({\n        UIStats: e.target.value\n      }).then(function (data) {\n        return setModel(function (state) {\n          return _objectSpread({}, state, data[0], {\n            config: _objectSpread({}, state.config, data[1])\n          });\n        });\n      });\n    };\n\n    if (e.target.value === false) handle();else Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will other can see stats your model.',\n      okText: 'Yes',\n      onOk: handle,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleRadioAnnotation = function handleRadioAnnotation(e) {\n    var handle = function handle() {\n      return handleModelUpdate({\n        UIAnnotation: e.target.value\n      }).then(function (data) {\n        return setModel(function (state) {\n          return _objectSpread({}, state, data[0], {\n            config: _objectSpread({}, state.config, data[1])\n          });\n        });\n      });\n    };\n\n    if (e.target.value === false) handle();else Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will users can make annotation in your model.',\n      okText: 'Yes',\n      onOk: handle,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleRemoveLabel = function handleRemoveLabel(key) {\n    var value = model.label.filter(function (item, i) {\n      return i !== key;\n    });\n\n    var handle = function handle() {\n      return handleModelUpdate({\n        label: value\n      }).then(function (data) {\n        return setModel(function (state) {\n          return _objectSpread({}, state, data[0], {\n            config: _objectSpread({}, state.config, data[1])\n          });\n        });\n      });\n    };\n\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will remove a label from your model.',\n      okText: 'Yes',\n      onOk: handle,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var beforeUpload = function beforeUpload(file) {\n    if (file.type !== 'image/png') {\n      message.error('You can only upload PNG file!');\n      return false;\n    }\n\n    if (file.size / 1024 / 1024 > 10) {\n      message.error('Image must smaller than 10MB!');\n      return false;\n    }\n\n    return true;\n  };\n\n  var uploudAvatar = {\n    accept: 'image/png',\n    name: 'file',\n    action: \"/source\",\n    showUploadList: false,\n    beforeUpload: beforeUpload,\n    onChange: function onChange(info) {\n      if (info.file.status !== 'uploading') {}\n\n      if (info.file.status === 'done') {\n        setSpinning(true);\n        var formData = new FormData();\n        formData.append('avatar', info.file.originFileObj);\n        axios({\n          method: 'PATCH',\n          url: \"\".concat(props.apiUrl, \"/avatar/\").concat(model.id),\n          data: formData,\n          headers: {\n            authorization: props.token\n          }\n        }).then(function (res) {\n          if (res.status === 200) {\n            message.success(\"Avatar changed successfully.\");\n          }\n        })[\"finally\"](function () {\n          setSpinning(false);\n          window.location.reload();\n        });\n      } else if (info.file.status === 'error') {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n\n  var getTrain = function getTrain() {\n    return axios({\n      method: \"GET\",\n      url: \"\".concat(props.modelApi, \"/train/export\"),\n      headers: {\n        authorization: props.token\n      }\n    }).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      return console.log(err.response.status);\n    });\n  };\n\n  var generateCSV = function generateCSV(data) {\n    var buffered = new ArrayBuffer(data.length);\n    var view = new Uint8Array(buffered);\n\n    for (var i = 0; i != data.length; ++i) {\n      view[i] = data.charCodeAt(i) & 0xFF;\n    }\n\n    return buffered;\n  };\n\n  var handleExportCSV =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var trainings, worksheet, csv;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return getTrain();\n\n            case 2:\n              trainings = _context4.sent;\n              worksheet = XLSX.utils.json_to_sheet(trainings);\n              csv = XLSX.utils.sheet_to_csv(worksheet);\n              saveAs(new Blob([generateCSV(csv)], {\n                type: \"application/octet-stream\"\n              }), \"\".concat(props.model.name, \".csv\"));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleExportCSV() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(UserLayout, props, React.createElement(Spin, {\n    spinning: spinning\n  }, React.createElement(Row, {\n    type: \"flex\",\n    gutter: 32\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"My Model Info - Sistem Anotasi Named Entity\")), React.createElement(Col, {\n    xs: 24,\n    md: 6\n  }, React.createElement(ModelSider, {\n    current: selectedKeys,\n    dataSource: model\n  })), React.createElement(Col, {\n    xs: 24,\n    md: 18\n  }, React.createElement(Card, {\n    className: \"ant-custom\",\n    actions: [React.createElement(Button, {\n      className: \"btn-danger\",\n      onClick: handleModelRemove\n    }, \"Delete Model\")]\n  }, React.createElement(Row, null, React.createElement(Col, {\n    md: 4\n  }, React.createElement(Card, {\n    bordered: false\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-end'\n    }\n  }, React.createElement(Avatar, {\n    size: 70,\n    src: model.avatar.path\n  }), React.createElement(Upload, uploudAvatar, React.createElement(\"a\", {\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0\n    }\n  }, React.createElement(Icon, {\n    type: \"edit\"\n  })))))), React.createElement(Col, {\n    md: 20\n  }, React.createElement(Card, {\n    bordered: false\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Title, {\n    level: 4,\n    editable: {\n      onChange: handleEditName\n    }\n  }, model.name), React.createElement(Typography.Paragraph, {\n    style: {\n      textAlign: 'justify'\n    },\n    editable: {\n      onChange: handleEditDescription\n    },\n    ellipsis: {\n      rows: 4,\n      expandable: true\n    }\n  }, model.desc)), React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Row, null, React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Type\"), React.createElement(Radio.Group, {\n    value: model.isPrivate,\n    onChange: handleRadioPrivate,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: true\n  }, \"Private\"), React.createElement(Radio.Button, {\n    value: false\n  }, \"Public\"))), React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Annotator\"), React.createElement(Radio.Group, {\n    value: model.annotator,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: \"classifier\"\n  }, \"Classifier\"), React.createElement(Radio.Button, {\n    value: \"extractor\"\n  }, \"Extractor\"), React.createElement(Radio.Button, {\n    value: \"pattern-extractor\"\n  }, \"Pattern Extractor\"))), React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Label\"), model.label.map(function (item, key) {\n    return React.createElement(Tag, {\n      key: key,\n      className: \"ant-custom\",\n      color: item.color,\n      style: {\n        marginBottom: 8\n      },\n      onClose: function onClose() {\n        return handleRemoveLabel(key);\n      },\n      closable: true\n    }, item.name);\n  }), inputVisible && React.createElement(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    ref: labelWrapper\n  }, React.createElement(Input, {\n    ref: inputRef,\n    style: {\n      width: 120,\n      outlineColor: colorPicker\n    },\n    value: inputValue,\n    onChange: function onChange(e) {\n      return setInputValue(e.target.value);\n    },\n    onPressEnter: handleAddLabel,\n    onKeyDown: handleTabLabel,\n    suffix: React.createElement(Popover, {\n      placement: \"bottomRight\",\n      content: React.createElement(CirclePicker, {\n        color: colorPicker,\n        onChange: function onChange(color) {\n          setColorPicker(color.hex);\n          inputRef.current.focus();\n        }\n      }),\n      trigger: \"click\"\n    }, React.createElement(\"div\", {\n      style: {\n        width: 15,\n        height: 15,\n        background: colorPicker\n      }\n    }))\n  })) //  <Input \n  //   ref={inputRef} \n  //   style={{width: 90}} \n  //   type=\"text\" \n  //   value={inputValue} \n  //   onChange={e => setInputValue(e.target.value)} \n  //   onPressEnter={handleAddLabel}/>\n  , !inputVisible && React.createElement(Tag, {\n    className: \"ant-custom\",\n    style: {\n      background: '#fff',\n      borderStyle: 'dashed',\n      cursor: 'pointer'\n    },\n    onClick: handleInputVisible\n  }, \"New Label\")))), React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      marginBottom: 16\n    },\n    strong: true\n  }, \"UI Control\"), React.createElement(Row, null, React.createElement(Col, {\n    md: 12,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Menu Stats\"), React.createElement(Radio.Group, {\n    value: model.config.UIStats,\n    onChange: handleRadioMenuStats,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: true\n  }, \"Show\"), React.createElement(Radio.Button, {\n    value: false\n  }, \"Hide\"))), React.createElement(Col, {\n    md: 12,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Menu Annotation\"), React.createElement(Radio.Group, {\n    value: model.config.UIAnnotation,\n    onChange: handleRadioAnnotation,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: true\n  }, \"Show\"), React.createElement(Radio.Button, {\n    value: false\n  }, \"Hide\"))))), React.createElement(\"div\", {\n    style: {\n      marginBottom: 8\n    }\n  }, React.createElement(Typography.Text, {\n    strong: true\n  }, \"Export Train Data\")), React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: 'block',\n      marginBottom: 8\n    }\n  }, \"File Download:\"), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, React.createElement(Button, {\n    style: {\n      marginRight: 16\n    },\n    type: \"primary\",\n    icon: \"download\",\n    onClick: handleExportCSV\n  }, \"Download CSV\"))))))))))));\n}\n\nModelView.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(_ref6) {\n    var apiUrl, token, query, id, modelApi, model;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            apiUrl = _ref6.apiUrl, token = _ref6.token, query = _ref6.query;\n            id = query.id;\n            modelApi = \"\".concat(apiUrl, \"/model/\").concat(id);\n            _context5.prev = 3;\n            _context5.next = 6;\n            return axios({\n              method: \"GET\",\n              url: modelApi,\n              headers: {\n                authorization: token\n              }\n            }).then(function (res) {\n              return res.data;\n            });\n\n          case 6:\n            model = _context5.sent;\n            return _context5.abrupt(\"return\", {\n              modelApi: modelApi,\n              model: model\n            });\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](3);\n            return _context5.abrupt(\"return\", {\n              errorCode: _context5.t0.response.status\n            });\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[3, 10]]);\n  }));\n\n  return function (_x2) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(ModelView);","map":null,"metadata":{},"sourceType":"module"}