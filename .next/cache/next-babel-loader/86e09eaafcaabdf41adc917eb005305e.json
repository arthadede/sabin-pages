{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Row, Col, Card, Button, Modal, message, Empty, Menu, Dropdown, Icon, Skeleton, List, Checkbox, Typography } from 'antd';\nimport Head from 'next/head';\nimport Error from 'next/error';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport ModelSider from '../components/MeModelSider';\nimport UserLayout from '../components/UserLayout';\nimport ModalAddSource from '../components/ModalAddSource';\nimport { withAuthSync } from '../utils/auth';\n\nfunction ModelSource(props) {\n  if (props.errorCode) return React.createElement(Error, {\n    statusCode: props.errorCode\n  });\n\n  var _useState = useState(io.connect(process.env.API_HOST)),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var selectedKeys = props.route.parsedUrl.pathname;\n\n  var _useState3 = useState(props.source.json),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var selectedAll = state.length === selected.length && state.length !== 0;\n\n  var handleRemove = function handleRemove(data) {\n    return new _Promise(function (resolve, reject) {\n      axios({\n        method: \"PATCH\",\n        url: \"\".concat(props.modelApi, \"/source/remove\"),\n        headers: {\n          authorization: props.token\n        },\n        data: {\n          sourceIds: data\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          socket.emit('remove', props.model.id);\n          resolve(res.data);\n        }\n      })[\"catch\"](function (err) {\n        return reject(err);\n      });\n    });\n  };\n\n  var removeSource = function removeSource(id) {\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will not be able to recover this source.',\n      okText: 'Yes',\n      onOk: function onOk() {\n        handleRemove([id]).then(function (result) {\n          setState(result.json);\n          message.success(\"Source removed successfully.\");\n        })[\"catch\"](function (err) {\n          message.error(\"Something wrong.\");\n        });\n      },\n      cancelText: 'Cancel'\n    });\n  };\n\n  var removeSources = function removeSources() {\n    if (selected.length === 0) {\n      message.warning(\"Please select checkbox you want delete.\");\n      return;\n    }\n\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will not be able to recover this source.',\n      okText: 'Yes',\n      onOk: function onOk() {\n        handleRemove(selected).then(function (result) {\n          setState(result.json);\n          setSelected([]);\n          message.success(\"Source removed successfully.\");\n        })[\"catch\"](function (err) {\n          message.error(\"Something wrong.\");\n        });\n      },\n      cancelText: 'Cancel'\n    });\n  };\n\n  var addModelProps = _objectSpread({}, props, {\n    visible: modalVisible,\n    onOk: function onOk(record) {\n      setModalVisible(false);\n      setState(record);\n    },\n    onCancel: function onCancel() {\n      setModalVisible(false);\n    }\n  });\n\n  var selectAll = function selectAll() {\n    if (selectedAll) {\n      setSelected([]);\n      return;\n    }\n\n    setSelected(_.map(state, function (item, index) {\n      return index;\n    }));\n  };\n\n  var ComponentCardExtra = React.createElement(React.Fragment, null, React.createElement(Button, {\n    type: selectedAll ? \"primary\" : \"default\",\n    style: {\n      marginLeft: 8\n    },\n    onClick: function onClick() {\n      return selectAll();\n    }\n  }, \"Select All\"), React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      marginLeft: 8\n    },\n    onClick: function onClick() {\n      return setModalVisible(true);\n    }\n  }, \"Add Source\"), React.createElement(Button, {\n    type: \"danger\",\n    style: {\n      marginLeft: 8\n    },\n    onClick: removeSources\n  }, \"Delete Selected\"));\n\n  var ComponentList = function ComponentList() {\n    return React.createElement(Checkbox.Group, {\n      style: {\n        width: '100%'\n      },\n      value: selected,\n      onChange: function onChange(val) {\n        return setSelected(val);\n      }\n    }, React.createElement(List, {\n      pagination: true,\n      dataSource: state,\n      renderItem: function renderItem(item, index) {\n        return React.createElement(List.Item, {\n          actions: [React.createElement(Dropdown, {\n            overlay: React.createElement(Menu, null, React.createElement(Menu.Item, {\n              key: \"0\"\n            }, React.createElement(\"a\", {\n              onClick: function onClick() {\n                return removeSource(index);\n              }\n            }, \"Remove\")))\n          }, React.createElement(Button, null, \"Action \", React.createElement(Icon, {\n            type: \"down\"\n          })))]\n        }, React.createElement(Skeleton, {\n          avatar: true,\n          title: false,\n          loading: item.loading,\n          active: true\n        }, React.createElement(List.Item.Meta, {\n          style: {\n            alignItems: 'center'\n          },\n          avatar: React.createElement(Checkbox, {\n            style: {\n              marginLeft: 16,\n              marginRight: 16\n            },\n            value: index\n          }),\n          description: React.createElement(Typography.Paragraph, {\n            style: {\n              minWidth: 0\n            },\n            ellipsis: {\n              rows: 3\n            }\n          }, item)\n        })));\n      }\n    }));\n  };\n\n  return React.createElement(UserLayout, props, React.createElement(Row, {\n    type: \"flex\",\n    gutter: 16\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"My Model Source - Sistem Anotasi Named Entity\")), React.createElement(Col, {\n    xs: 24,\n    md: 6\n  }, React.createElement(ModelSider, {\n    current: selectedKeys,\n    dataSource: props.model\n  })), React.createElement(Col, {\n    xs: 24,\n    md: 18\n  }, React.createElement(Card, {\n    title: \"Sources\",\n    extra: ComponentCardExtra\n  }, state.length > 0 ? React.createElement(ComponentList, null) : React.createElement(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE\n  })))), React.createElement(ModalAddSource, addModelProps));\n}\n\nModelSource.Layout = UserLayout;\n\nModelSource.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var apiUrl, token, query, id, modelApi, model, source;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiUrl = _ref.apiUrl, token = _ref.token, query = _ref.query;\n            id = query.id;\n            modelApi = \"\".concat(apiUrl, \"/model/\").concat(id);\n            _context.prev = 3;\n            _context.next = 6;\n            return axios({\n              method: \"GET\",\n              url: modelApi,\n              headers: {\n                authorization: token\n              }\n            }).then(function (res) {\n              return res.data;\n            });\n\n          case 6:\n            model = _context.sent;\n            _context.next = 9;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(modelApi, \"/source\"),\n              headers: {\n                authorization: token\n              }\n            }).then(function (res) {\n              return res.data;\n            });\n\n          case 9:\n            source = _context.sent;\n            return _context.abrupt(\"return\", {\n              modelApi: modelApi,\n              model: model,\n              source: source\n            });\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", {\n              errorCode: _context.t0.response.status\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 13]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(ModelSource);","map":null,"metadata":{},"sourceType":"module"}