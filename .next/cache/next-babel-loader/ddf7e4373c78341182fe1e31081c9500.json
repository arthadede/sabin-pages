{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _ from 'lodash';\nimport { Typography, Button, Affix, message } from 'antd';\nimport React, { useState, useEffect } from 'react';\n\nfunction Extractor(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  var createScriptItem = function createScriptItem(pos, data) {\n    var element = document.createElement('span');\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n    element.className = 'annotation-script-item annotation-script-item-mark';\n    element.style.position = 'absolute';\n    element.style.top = \"\".concat(pos.top + scrollTop, \"px\");\n    element.style.left = \"\".concat(pos.left + scrollLeft, \"px\");\n    element.style.width = \"\".concat(pos.width, \"px\");\n    element.style.height = \"\".concat(pos.height, \"px\");\n    element.style.background = \"\".concat(data.color, \"a1\");\n    element.style.zIndex = 5;\n    document.body.appendChild(element);\n  };\n\n  var createLabelItem = function createLabelItem(pos, data) {\n    var element = document.createElement('span');\n    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n    element.className = 'annotation-script-item annotation-script-item-label';\n    element.style.position = 'absolute';\n    element.style.color = '#fff';\n    element.style.background = data.color;\n    element.style.padding = '0px 6px';\n    element.style.top = \"\".concat(pos.top + scrollTop - 15, \"px\");\n    element.style.left = \"\".concat(pos.left + scrollLeft, \"px\");\n    element.innerText = data.label;\n    element.style.zIndex = 25;\n    element.style.cursor = 'pointer';\n    element.addEventListener('click', function (e) {\n      props.onChange(function (state) {\n        return state.filter(function (item) {\n          return item.startOffset !== data.startOffset && item.endOffset !== data.endOffset;\n        });\n      });\n    });\n    document.body.appendChild(element);\n  };\n\n  var handleResize = function handleResize() {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      window.addEventListener(\"resize\", null);\n    };\n  }, []);\n  useEffect(function () {\n    var elementScript = document.getElementById(\"annotation-script\").childNodes[0];\n    props.value.forEach(function (item) {\n      var pos, range, color;\n      range = document.createRange();\n      range.setStart(elementScript, item.startOffset);\n      range.setEnd(elementScript, item.endOffset);\n      pos = range.getClientRects();\n      createLabelItem(pos[0], item);\n\n      _.forEach(pos, function (n) {\n        createScriptItem(n, item);\n      });\n    });\n    return function () {\n      var elementScriptItem = document.querySelectorAll('.annotation-script-item');\n      elementScriptItem.forEach(function (n) {\n        return document.body.removeChild(n);\n      });\n    };\n  }, [props.value, windowSize]);\n\n  var handleAddSource = function handleAddSource(item) {\n    if (window.getSelection().anchorNode !== null) {\n      if (window.getSelection().anchorNode.wholeText === props.dataSource) {\n        var pos = window.getSelection().getRangeAt(0);\n        props.onChange(function (state) {\n          return [].concat(_toConsumableArray(state), [{\n            startOffset: pos.startOffset,\n            endOffset: pos.endOffset,\n            color: item.color,\n            label: item.name\n          }]);\n        });\n        window.getSelection().removeAllRanges();\n      } else {\n        message.warning(\"Text yang ditandai tidak valid.\");\n      }\n    } else {\n      message.warning(\"Tidak ada yang ditandai.\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      minHeight: 500\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Affix, {\n    offsetTop: 10\n  }, props.dataLabel.map(function (item, index) {\n    return React.createElement(Button, {\n      key: index,\n      className: \"ant-custom ant-tag\",\n      style: {\n        marginBottom: 8,\n        background: item.color,\n        border: item.color,\n        color: '#fff',\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        return handleAddSource(item);\n      }\n    }, item.name);\n  }))), React.createElement(\"div\", null, React.createElement(Typography.Paragraph, {\n    id: \"annotation-script\"\n  }, props.dataSource)));\n}\n\nexport default Extractor;","map":null,"metadata":{},"sourceType":"module"}