{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Row, Col, Card, Form, Input, Button, Icon, message } from \"antd\";\nimport React, { useState } from 'react';\nimport { Router } from '../routes';\nimport Head from 'next/head';\nimport axios from 'axios';\n\nfunction ChangePassword(props) {\n  var _props$form = props.form,\n      getFieldDecorator = _props$form.getFieldDecorator,\n      getFieldValue = _props$form.getFieldValue;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(err, values) {\n        var password, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (err) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.prev = 1;\n                setLoading(true);\n                password = values.newPassword;\n                _context.next = 6;\n                return axios({\n                  method: \"POST\",\n                  url: \"\".concat(props.apiUrl, \"/change-password\"),\n                  data: {\n                    token: props.clientToken,\n                    password: password\n                  }\n                });\n\n              case 6:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  message.success(\"Password has been changed successfully.\");\n                  Router.pushRoute(\"/login\");\n                }\n\n                _context.next = 19;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                _context.t1 = _context.t0.response.status;\n                _context.next = _context.t1 === 400 ? 15 : _context.t1 === 500 ? 17 : 19;\n                break;\n\n              case 15:\n                message.error(_context.t0.response.data.message && _context.t0.response.statusText);\n                return _context.abrupt(\"break\", 19);\n\n              case 17:\n                message.error(_context.t0.response.statusText);\n                return _context.abrupt(\"break\", 19);\n\n              case 19:\n                _context.prev = 19;\n                setLoading(false);\n                return _context.finish(19);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10, 19, 22]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      height: \"inherit\",\n      display: 'flex',\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"Change Password - Sistem Anotasi Named Entity\")), React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"center\"\n  }, React.createElement(Card, {\n    title: \"Change Password\",\n    extra: React.createElement(\"a\", {\n      onClick: function onClick() {\n        return Router.pushRoute(\"/\");\n      }\n    }, \"Back \", React.createElement(Icon, {\n      type: \"right\"\n    })),\n    style: {\n      minWidth: 400\n    }\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit\n  }, React.createElement(Form.Item, null, getFieldDecorator('newPassword', {\n    rules: [{\n      required: true,\n      message: \"This field is required.\"\n    }, {\n      min: 6,\n      message: \"Minimum length is 6 characters.\"\n    }, {\n      max: 20,\n      message: \"Minimum length is 20 characters.\"\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"New password\"\n  }))), React.createElement(Form.Item, null, getFieldDecorator('confirmPassword', {\n    rules: [{\n      required: true,\n      message: 'Please input your confirm password!'\n    }, {\n      validator: function validator(rule, value, cb) {\n        if (value !== getFieldValue('newPassword')) {\n          cb(\"Password doesn't match\");\n        }\n\n        cb();\n      }\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirmation password\"\n  }))), React.createElement(Form.Item, {\n    style: {\n      margin: 0,\n      textAlign: \"center\"\n    }\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    block: true\n  }, \"Change password\"))))));\n}\n\nChangePassword.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2) {\n    var query, res, token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref2.query, res = _ref2.res;\n            token = query.token;\n\n            if (!token) {\n              process.browser ? Router.push('/') : res.redirect('/', 302).end();\n            }\n\n            return _context2.abrupt(\"return\", {\n              clientToken: query.token\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar WrappedChangePassword = Form.create({\n  name: \"forget-password-form\"\n})(ChangePassword);\nexport default WrappedChangePassword;","map":null,"metadata":{},"sourceType":"module"}