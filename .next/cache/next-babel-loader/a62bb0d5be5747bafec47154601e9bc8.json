{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Row, Typography, Table, Dropdown, Menu, Button, Icon, Card, Input, Modal, message } from 'antd';\nimport AdminLayout from \"../components/AdminLayout\";\nimport Head from 'next/head';\nimport axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { withAuthSync } from '../utils/auth';\n\nfunction AdminSource(props) {\n  var _useState = useState(props.source),\n      _useState2 = _slicedToArray(_useState, 2),\n      source = _useState2[0],\n      setSource = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var destroy = function destroy(id) {\n    var handleOk =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios({\n                  method: 'DELETE',\n                  url: \"\".concat(props.apiSource, \"/\").concat(id),\n                  headers: {\n                    authorization: props.token\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  message.success(\"Source deleted successfully.\");\n                  setSource(source.filter(function (item) {\n                    if (item.id === id) return false;\n                    return true;\n                  }));\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleOk() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will not be able to recover this source.',\n      okText: 'Yes',\n      onOk: handleOk,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleMenuClick = function handleMenuClick(e, id) {\n    switch (e.key) {\n      case 'destroy':\n        destroy(id);\n        break;\n    }\n  };\n\n  var compareObjects = function compareObjects(o1, o2) {\n    var k = '';\n\n    for (k in o1) {\n      if (o1[k] != o2[k]) return false;\n    }\n\n    for (k in o2) {\n      if (o1[k] != o2[k]) return false;\n    }\n\n    return true;\n  };\n\n  var itemExists = function itemExists(haystack, needle) {\n    for (var i = 0; i < haystack.length; i++) {\n      if (compareObjects(haystack[i], needle)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var searchAll = function searchAll(objects) {\n    var results = [];\n    var toSearch = search.trim();\n\n    for (var i = 0; i < objects.length; i++) {\n      for (var key in objects[i]) {\n        if (_.includes(objects[i][key], toSearch)) {\n          if (!itemExists(results, objects[i])) results.push(objects[i]);\n        }\n      }\n    }\n\n    return results;\n  };\n\n  var columns = [{\n    key: 'text',\n    title: 'Text',\n    dataIndex: 'text',\n    render: function render(text) {\n      return React.createElement(Typography.Paragraph, {\n        ellipsis: {\n          rows: 3\n        }\n      }, text);\n    }\n  }, {\n    key: 'createdAt',\n    title: 'Created date',\n    dataIndex: 'createdAt',\n    width: 140,\n    align: 'center',\n    render: function render(text) {\n      return React.createElement(Typography.Text, null, moment(text).fromNow());\n    }\n  }, {\n    key: 'operation',\n    render: function render(text, record) {\n      return React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          onClick: function onClick(e) {\n            return handleMenuClick(e, record.id);\n          }\n        }, React.createElement(Menu.Item, {\n          key: \"destroy\"\n        }, \"Destroy\"))\n      }, React.createElement(Button, null, \"Actions \", React.createElement(Icon, {\n        type: \"down\"\n      })));\n    }\n  }];\n  return React.createElement(AdminLayout, props, React.createElement(Row, null, React.createElement(Head, null, React.createElement(\"title\", null, \"Admin Source - Sistem Anotasi Named Entity\")), React.createElement(Card, {\n    bordered: false,\n    title: \"Source Data\",\n    extra: React.createElement(Input.Search, {\n      value: search,\n      onChange: function onChange(e) {\n        return setSearch(e.target.value);\n      }\n    })\n  }, React.createElement(Table, {\n    rowKey: \"id\",\n    columns: columns,\n    dataSource: searchAll(source),\n    expandedRowRender: function expandedRowRender(record) {\n      return React.createElement(\"p\", {\n        style: {\n          margin: 0\n        }\n      }, record.text);\n    }\n  }))));\n}\n\nAdminSource.Layout = AdminLayout;\n\nAdminSource.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2) {\n    var apiUrl, token, apiSource, fetchSource, _ref4, _ref5, source;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            apiUrl = _ref2.apiUrl, token = _ref2.token;\n            apiSource = \"\".concat(apiUrl, \"/admin/source\");\n\n            fetchSource = function fetchSource() {\n              return axios({\n                method: 'GET',\n                url: apiSource,\n                headers: {\n                  authorization: token\n                }\n              });\n            };\n\n            _context2.next = 5;\n            return axios.all([fetchSource()]);\n\n          case 5:\n            _ref4 = _context2.sent;\n            _ref5 = _slicedToArray(_ref4, 1);\n            source = _ref5[0];\n            return _context2.abrupt(\"return\", {\n              apiSource: apiSource,\n              source: source.data\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(AdminSource, 1);","map":null,"metadata":{},"sourceType":"module"}