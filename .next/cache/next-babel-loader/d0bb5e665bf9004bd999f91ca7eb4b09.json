{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { Row, Col, Card, Button, Modal, Empty, message } from 'antd';\nimport Head from 'next/head';\nimport Error from 'next/error';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { withAuthSync } from '../utils/auth';\nimport ModelSider from '../components/MeModelSider';\nimport UserLayout from '../components/UserLayout';\nimport Classifier from '../components/Classifier';\nimport Extractor from '../components/Extractor';\nimport PatternExtractor from '../components/PatternExtractor';\n\nfunction ModelAnno(props) {\n  if (props.errorCode) return React.createElement(Error, {\n    statusCode: props.errorCode\n  });\n\n  var _useState = useState(io.connect(process.env.API_HOST)),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      source = _useState4[0],\n      setSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      state = _useState6[0],\n      setState = _useState6[1];\n\n  var selectedKeys = props.route.parsedUrl.pathname;\n  var Title = props.model.annotator === 'classifier' ? \"Text Classification\" : props.model.annotator === 'extractor' ? \"Text Extractor\" : \"Select a sentence for annotation\";\n  var Annotation = props.model.annotator === 'classifier' ? Classifier : props.model.annotator === 'extractor' ? Extractor : PatternExtractor;\n\n  var handleConfirm = function handleConfirm() {\n    if (state.length === 0) {\n      message.error(\"This field is empty.\");\n      return;\n    }\n\n    var handleOk = function handleOk() {\n      socket.emit('post', {\n        modelId: props.model.id,\n        userId: props.token,\n        training: state,\n        source: source\n      });\n      socket.on('post', function (res) {\n        socket.emit('get', props.model.id);\n        socket.on('response', function (res) {\n          return setSource.apply(void 0, _toConsumableArray(res));\n        });\n        setState([]);\n      });\n      message.success(\"Traning created successfully.\");\n    };\n\n    Modal.confirm({\n      title: 'Are you sure?',\n      content: 'You will save to train and not be able to edit this annotation.',\n      okText: 'Yes',\n      onOk: handleOk,\n      cancelText: 'Cancel'\n    });\n  };\n\n  var handleNext = function handleNext() {\n    socket.emit('get', props.model.id);\n    socket.on('response', function (res) {\n      return setSource.apply(void 0, _toConsumableArray(res));\n    });\n    setState([]);\n  };\n\n  useEffect(function () {\n    socket.on('disconnect', function () {\n      socket.open();\n    });\n    socket.emit('get', props.model.id);\n    socket.on('response', function (res) {\n      return setSource.apply(void 0, _toConsumableArray(res));\n    });\n    return function () {\n      socket.close();\n    };\n  }, []);\n\n  var AnnotationComponent = function AnnotationComponent() {\n    if (!source) return React.createElement(Empty, {\n      image: Empty.PRESENTED_IMAGE_SIMPLE\n    });\n    return React.createElement(\"div\", null, React.createElement(Annotation, {\n      dataLabel: props.model.label,\n      dataSource: source,\n      value: state,\n      onChange: function onChange(val) {\n        return setState(val);\n      }\n    }), React.createElement(\"div\", {\n      className: \"d-flex \\r align-items-center \\r justify-content-flex-end\"\n    }, React.createElement(Button, {\n      icon: \"reload\",\n      onClick: handleNext,\n      style: {\n        marginLeft: 16\n      }\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: handleConfirm,\n      style: {\n        marginLeft: 16\n      }\n    }, \"Confirm\")));\n  };\n\n  return React.createElement(UserLayout, props, React.createElement(Row, {\n    type: \"flex\",\n    gutter: 32\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"My Model Annotation - Sistem Anotasi Named Entity\")), React.createElement(Col, {\n    md: 6\n  }, React.createElement(ModelSider, {\n    current: selectedKeys,\n    dataSource: props.model\n  })), React.createElement(Col, {\n    md: 18\n  }, React.createElement(Card, {\n    title: Title\n  }, React.createElement(AnnotationComponent, null)))));\n}\n\nModelAnno.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var res, apiUrl, token, query, id, model;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref.res, apiUrl = _ref.apiUrl, token = _ref.token, query = _ref.query;\n            id = query.id;\n            process.browser ? null : res.redirect(\"/me/model/\".concat(id), 302);\n            _context.prev = 3;\n            _context.next = 6;\n            return axios({\n              method: \"GET\",\n              url: \"\".concat(apiUrl, \"/model/\").concat(id),\n              headers: {\n                authorization: token\n              }\n            }).then(function (res) {\n              return res.data;\n            });\n\n          case 6:\n            model = _context.sent;\n            return _context.abrupt(\"return\", {\n              model: model\n            });\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", {\n              errorCode: _context.t0.response.status\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(ModelAnno);","map":null,"metadata":{},"sourceType":"module"}