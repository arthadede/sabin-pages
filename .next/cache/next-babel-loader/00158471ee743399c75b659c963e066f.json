{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport Head from 'next/head';\nimport Error from 'next/error';\nimport axios from \"axios\";\nimport { Typography, Row, Col, Avatar, Tag, Radio, Card } from \"antd\";\nimport UserLayout from \"../components/UserLayout\";\nimport ModelSider from \"../components/ModelSider\";\nimport { withAuthSync } from '../utils/auth';\n\nfunction ModelView(props) {\n  var selectedKeys = props.route.parsedUrl.pathname;\n\n  if (props.errorCode > 200) {\n    return React.createElement(Error, {\n      statusCode: props.errorCode\n    });\n  }\n\n  return React.createElement(UserLayout, props, React.createElement(Row, {\n    type: \"flex\",\n    gutter: 32\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"Model Info - Sistem Anotasi Named Entity\")), React.createElement(Col, {\n    md: 6\n  }, React.createElement(ModelSider, {\n    id: props.model.id,\n    config: props.model.config,\n    current: selectedKeys\n  })), React.createElement(Col, {\n    md: 18\n  }, React.createElement(Card, null, React.createElement(Row, null, React.createElement(Col, {\n    md: 4\n  }, React.createElement(Card, {\n    bordered: false\n  }, React.createElement(Avatar, {\n    size: 89,\n    src: props.model.avatar.path\n  }))), React.createElement(Col, {\n    md: 20\n  }, React.createElement(Card, {\n    bordered: false\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Title, {\n    level: 4\n  }, props.model.name), React.createElement(Typography.Paragraph, {\n    style: {\n      textAlign: 'justify'\n    },\n    ellipsis: {\n      rows: 4,\n      expandable: true\n    }\n  }, props.model.desc)), React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Row, null, React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Type\"), React.createElement(Radio.Group, {\n    value: props.model.isPrivate,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: true\n  }, \"Private\"), React.createElement(Radio.Button, {\n    value: false\n  }, \"Public\"))), React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Annotator\"), React.createElement(Radio.Group, {\n    value: props.model.annotator,\n    buttonStyle: \"solid\"\n  }, React.createElement(Radio.Button, {\n    value: \"classifier\"\n  }, \"Classifier\"), React.createElement(Radio.Button, {\n    value: \"extractor\"\n  }, \"Extractor\"), React.createElement(Radio.Button, {\n    value: \"pattern-extractor\"\n  }, \"Pattern Extractor\"), React.createElement(Radio.Button, {\n    value: \"question-answer\"\n  }, \"Question Answer\"))), React.createElement(Col, {\n    md: 24,\n    style: {\n      marginBottom: 16\n    }\n  }, React.createElement(Typography.Text, {\n    style: {\n      display: \"block\",\n      marginBottom: 8\n    },\n    type: \"secondary\"\n  }, \"Label\"), props.model.label.map(function (item, key) {\n    return React.createElement(Tag, {\n      key: key,\n      className: \"ant-custom\",\n      color: item.color,\n      style: {\n        marginBottom: 8\n      }\n    }, item.name);\n  }))))))))))));\n}\n\nModelView.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var apiUrl, token, query, id, modelApi, model;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiUrl = _ref.apiUrl, token = _ref.token, query = _ref.query;\n            id = query.id;\n            modelApi = \"\".concat(apiUrl, \"/model/\").concat(id);\n            _context.prev = 3;\n            _context.next = 6;\n            return axios({\n              method: \"GET\",\n              url: modelApi,\n              headers: {\n                authorization: token\n              }\n            }).then(function (res) {\n              return res.data;\n            });\n\n          case 6:\n            model = _context.sent;\n            return _context.abrupt(\"return\", {\n              model: model\n            });\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", {\n              errorCode: _context.t0.response.status\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withAuthSync(ModelView);","map":null,"metadata":{},"sourceType":"module"}